{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/users/{id}": {
      "get": {
        "operationId": "getOneUser",
        "summary": "Returning information about user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User has been found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "operationId": "postUser",
        "summary": "Creating new user in db",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchUser",
        "summary": "Updating user data",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/api/v1/tasks/complete/{id}": {
      "post": {
        "operationId": "postCompleteTasks",
        "summary": "Creating new completed tasks in db",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletedTasksCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Completed tasks has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompletedTaskEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{id}": {
      "get": {
        "operationId": "getOneTask",
        "summary": "Returning information about user",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User has been found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskEntity"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/api/v1/tasks": {
      "get": {
        "operationId": "getTasks",
        "summary": "Returning information about available for user tasks",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "country",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "placement",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gender",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback notes has been found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskEntity"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postTask",
        "summary": "Creating new task in db",
        "tags": [
          "Tasks"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskEntity"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchTask",
        "summary": "Updating task data",
        "tags": [
          "Tasks"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskEntity"
                }
              }
            }
          },
          "404": {
            "description": "Task not found."
          }
        }
      }
    }
  },
  "info": {
    "title": "Bot Server",
    "description": "The Bot Server API description",
    "version": "3.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://server:3000"
    }
  ],
  "components": {
    "schemas": {
      "WalletEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "266006070"
          },
          "ton_amount": {
            "type": "number",
            "example": 0.5
          },
          "ton_address": {
            "type": "string",
            "example": "UQD2WTp9z4qlXhYpiuI7WygQR59MC8dVxRCztvUtJrhLtRRE",
            "nullable": true
          },
          "created": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          },
          "updated": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          }
        },
        "required": [
          "id",
          "ton_amount",
          "ton_address",
          "created",
          "updated"
        ]
      },
      "UserEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "266006070"
          },
          "firstname": {
            "type": "string",
            "example": "Ivan",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "example": "Ivanov",
            "nullable": true
          },
          "username": {
            "type": "string",
            "example": "sergei_zheludkov",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "enum": [
              "ru",
              "en"
            ]
          },
          "country": {
            "type": "string",
            "enum": [
              "BY",
              "KZ",
              "RU",
              "UA"
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "support",
              "affiliate",
              "user"
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "all"
            ]
          },
          "who_invited": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserEntity"
              }
            ]
          },
          "referral_counter": {
            "type": "number",
            "example": 5
          },
          "complete_tasks_count": {
            "type": "number",
            "example": 5
          },
          "mining_rate": {
            "type": "number",
            "example": 1e-7
          },
          "wallet": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/WalletEntity"
              }
            ]
          },
          "mining_rate_started": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z",
            "nullable": true
          },
          "created": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          },
          "updated": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          }
        },
        "required": [
          "id",
          "firstname",
          "lastname",
          "username",
          "lang",
          "country",
          "role",
          "gender",
          "who_invited",
          "referral_counter",
          "complete_tasks_count",
          "mining_rate",
          "wallet",
          "mining_rate_started",
          "created",
          "updated"
        ]
      },
      "UserCreateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "266006070"
          },
          "firstname": {
            "type": "string",
            "example": "Ivan"
          },
          "lastname": {
            "type": "string",
            "example": "Ivanov"
          },
          "username": {
            "type": "string",
            "example": "sergei_zheludkov"
          },
          "who_invited_id": {
            "type": "string",
            "nullable": true,
            "example": "1269959930"
          },
          "lang": {
            "type": "string",
            "enum": [
              "ru",
              "en"
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "all"
            ]
          },
          "country": {
            "type": "string",
            "enum": [
              "BY",
              "KZ",
              "RU",
              "UA"
            ]
          }
        },
        "required": [
          "id",
          "lang",
          "gender",
          "country"
        ]
      },
      "UserUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "266006070"
          },
          "firstname": {
            "type": "string",
            "example": "Ivan"
          },
          "lastname": {
            "type": "string",
            "example": "Ivanov"
          },
          "username": {
            "type": "string",
            "example": "sergei_zheludkov"
          },
          "lang": {
            "type": "string",
            "enum": [
              "ru",
              "en"
            ]
          },
          "increase_mining_rate": {
            "type": "number",
            "example": 1e-7
          },
          "increase_complete_tasks_count": {
            "type": "number",
            "example": 1
          },
          "mining_rate_started": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          }
        },
        "required": [
          "id"
        ]
      },
      "CompletedTasksCreateDto": {
        "type": "object",
        "properties": {
          "tasks": {
            "example": [
              1,
              2,
              3
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "increase_mining_rate": {
            "type": "string",
            "example": "0.000_000_1"
          }
        },
        "required": [
          "tasks"
        ]
      },
      "TaskEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Crypto Sigma"
          },
          "type": {
            "type": "string",
            "enum": [
              "tg_public"
            ]
          },
          "country": {
            "type": "string",
            "enum": [
              "BY",
              "KZ",
              "RU",
              "UA"
            ]
          },
          "placement": {
            "type": "string",
            "enum": [
              "task_list",
              "mining_activation"
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "all"
            ]
          },
          "description": {
            "type": "string",
            "example": "1️⃣ Переходи на канал 👇🏻 подпиcывайся и листай ленту вверх🔝👁 (5-7 постов)\n\n2️⃣ Возвращайся сюда, чтобы получить вознаграждение"
          },
          "url": {
            "type": "string",
            "example": "https://t.me/bro_development"
          },
          "increase_mining_rate": {
            "type": "number",
            "example": 1e-7
          },
          "available_limit": {
            "type": "number",
            "example": 5
          },
          "check_key": {
            "type": "string",
            "example": "-1002238903830",
            "nullable": true
          },
          "complete_count": {
            "type": "number",
            "example": 5
          },
          "contact": {
            "type": "string",
            "example": [
              "tg:266006070",
              "email:kykarek@yandex.ru",
              "phone:+79238849922"
            ],
            "nullable": true
          },
          "created": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          },
          "updated": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          },
          "deleted": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "country",
          "placement",
          "gender",
          "description",
          "url",
          "increase_mining_rate",
          "available_limit",
          "check_key",
          "complete_count",
          "contact",
          "created",
          "updated",
          "deleted"
        ]
      },
      "CompletedTaskEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "task": {
            "$ref": "#/components/schemas/TaskEntity"
          },
          "created": {
            "format": "date-time",
            "type": "string",
            "example": "2022-10-21T19:48:59.726Z"
          }
        },
        "required": [
          "id",
          "user",
          "task",
          "created"
        ]
      },
      "TaskCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Crypto Sigma"
          },
          "type": {
            "type": "string",
            "enum": [
              "tg_public"
            ]
          },
          "country": {
            "type": "string",
            "enum": [
              "BY",
              "KZ",
              "RU",
              "UA"
            ]
          },
          "placement": {
            "type": "string",
            "enum": [
              "task_list",
              "mining_activation"
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "all"
            ]
          },
          "description": {
            "type": "string",
            "example": "1️⃣ Переходи на канал 👇🏻 подпиcывайся и листай ленту вверх🔝👁 (5-7 постов)\n\n2️⃣ Возвращайся сюда, чтобы получить вознаграждение"
          },
          "url": {
            "type": "string",
            "example": "https://t.me/bro_development"
          },
          "increase_mining_rate": {
            "type": "string",
            "example": "0.000_000_1"
          },
          "available_limit": {
            "type": "number",
            "example": 1000
          },
          "check_key": {
            "type": "string",
            "example": "-1002238903830"
          },
          "contact": {
            "type": "string",
            "example": [
              "tg:266006070",
              "email:kykarek@yandex.ru",
              "phone:+79238849922"
            ]
          }
        },
        "required": [
          "name",
          "type",
          "country",
          "placement",
          "gender",
          "description",
          "url",
          "available_limit"
        ]
      },
      "TaskUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Crypto Sigma"
          },
          "description": {
            "type": "string",
            "example": "1️⃣ Переходи на канал 👇🏻 подпиcывайся и листай ленту вверх🔝👁 (5-7 постов)\n\n2️⃣ Возвращайся сюда, чтобы получить вознаграждение"
          },
          "available_limit": {
            "type": "number",
            "example": 1000
          },
          "contact": {
            "type": "string",
            "example": [
              "tg:266006070",
              "email:kykarek@yandex.ru",
              "phone:+79238849922"
            ]
          }
        },
        "required": [
          "id",
          "name"
        ]
      }
    }
  }
}